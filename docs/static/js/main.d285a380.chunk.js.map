{"version":3,"sources":["componets/AddCategory.js","helpers/getGifs.js","componets/GifGridItem.js","componets/GifGrid.js","hooks/useFetchGifs.js","GifExperApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","console","log","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExperApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KA2BhD,OACI,sBAAMC,SAlBU,SAACC,GAEjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAG3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OAExCN,EAAe,MASnB,SAEI,6BACI,uBACAO,KAAO,OACPC,MAAUT,EACVU,SA9Bc,SAACP,GAGvBF,EAAcE,EAAEQ,OAAOF,e,+BCTlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATnB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGnC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,EAAL,WCHOO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtBoB,QAAQC,IAAIrB,GAFyB,MCDb,SAAEA,GAAc,MAGdd,mBAAS,CAC/BqB,KAAO,GACPe,SAAU,IAL0B,mBAGjCC,EAHiC,KAG1BC,EAH0B,KAuBxC,OAfAC,qBAAY,WAER1B,EAASC,GACA0B,MAAM,SAAAC,GAECH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAM9B,CAAEtB,IAEEuB,EDlB4BK,CAAe5B,GAApCa,EAJuB,EAI7BN,KAAee,EAJc,EAIdA,QAIvB,OACI,qCACI,qBAAIN,UAAY,qCAAhB,cAAwDhB,EAAxD,OAEEsB,GAAW,mBAAGN,UAAY,oCAAf,wBAEd,qBAAKA,UAAU,YAAf,SAGaH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAEOA,GADCA,EAAIC,aEpBxBkB,EAAc,WAAO,IAAD,EACK3C,mBAAS,CAAC,UADf,mBACxB4C,EADwB,KACZ7C,EADY,KAW/B,OACE,gCACE,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAII6C,EAAWrB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCnB5B+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.d285a380.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        //console.log(e.target.value);\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSumit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2){\r\n\r\n            //console.log ('Sumit Hecho');\r\n            setCategories( cats => [ inputValue, ...cats]);\r\n            \r\n            setinputValue ('');\r\n        }\r\n        \r\n        \r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSumit }>\r\n            \r\n            <h2>\r\n                <input\r\n                type = 'text'\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n                />\r\n            </h2>\r\n            \r\n        </form>\r\n    );\r\n\r\n      \r\n    \r\n    \r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n    \r\n    }\r\n","\r\nexport const getGifs = async ( category ) => {\r\n  \r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=mAUsobozLclRmmoThRI93ZEktM3clfWW`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n    \r\n    return gifs ;\r\n    \r\n  };","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  //console.log( id, title, url );\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__bounce\">\r\n      <img src={url} alt={title} />\r\n      <p> {title} </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    console.log(category);\r\n    \r\n    const { data: images , loading } = useFetchGifs ( category ); \r\n   \r\n \r\n\r\n    return (\r\n        <>\r\n            <h3 className = ' animate__animated animate__fadeIn' > {category} </h3>\r\n\r\n            { loading && <p className = ' animate__animated animate__flash' >Loading...</p>}\r\n\r\n           <div className=\"card-grid\">\r\n\r\n                    {\r\n                        images.map((img) => (\r\n                         <GifGridItem \r\n                            key={img.id} \r\n                            {...img} \r\n                        />\r\n                        ))\r\n                    }\r\n                    \r\n                </div> \r\n        </>\r\n    );\r\n};\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    //console.log(category);\r\n    \r\n    const [state, setstate] = useState({\r\n        data : [],\r\n        loading : true\r\n    });\r\n\r\n    useEffect ( () => {\r\n\r\n        getGifs( category)\r\n                .then( imgs => {\r\n                                                    \r\n                        setstate({\r\n                            data: imgs,\r\n                            loading: false\r\n                        });\r\n                                    \r\n\r\n                })\r\n\r\n    }, [ category ])\r\n\r\n    return state; // { data: [], loading : true}\r\n\r\n\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./componets/AddCategory\";\r\nimport { GifGrid } from \"./componets/GifGrid\";\r\n\r\nexport const GifExperApp = () => {\r\n  const [categories, setCategories] = useState([\"Messi\"]);\r\n\r\n  // const handleAdd = () => {\r\n\r\n  // 'HunterXHunter'\r\n\r\n  //setCategories([...categories, 'HunterXHunter']);\r\n  //   setCategories( cats => [ ...cats, 'HunterXHunter']);\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <h2>GifExperApp!!!</h2>\r\n      <AddCategory setCategories= {setCategories} />\r\n      <hr />\r\n      { /*categories + ' ' */}\r\n      <ol>\r\n        \r\n        {\r\n         \r\n          categories.map((category) => (\r\n              <GifGrid key={category} category={category} />\r\n                                       )\r\n                        )\r\n        }\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExperApp } from './GifExperApp';\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExperApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}